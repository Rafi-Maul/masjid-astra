<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');	class Propinsi extends MyController {			public function __construct() {			log_message('DEBUG', 'basic::Propinsi Class Initialized');			parent::__construct();		}				public function index() {			$this->password->getUrlAccess();						// Get post and/or flash data...			$page    =& $this->getInitVar('page', 1);			$filter  =& $this->getInitVar('filter', 1);			$keyword =& $this->getInitVar('keyword');						// Default where...			$sql_plus = '1=1';			$params   = array();						// Filter checking...			if (!empty($keyword)) {				$keyword = strtolower($keyword);				switch ($filter) {					case 1 :						$sql_plus = 'lower(nama) LIKE ?';						$params[] = "%{$keyword}%";						break;					default :						$sql_plus = '1=1';				}			}						$sql =	"					SELECT					id_propinsi,					nama,					keterangan					FROM					trans.propinsi					WHERE					{$sql_plus}					ORDER BY					nama					";							   						try {				$arr_propinsi =& $this->db->createPaging($page, $this->getListPerPage(), $sql, $params);			} catch (Exception $e) {				show_error($e->getMessage());			}								$this->setHidden('filter', $filter);			$this->setHidden('keyword', $keyword);						$data 			 		= array();			$data['page']	 		= $page;			$data['filter']	 		= $filter;			$data['keyword'] 		= $keyword;				$data['arr_propinsi'] 	= $arr_propinsi;			$this->load->viewPage('basic/list_propinsi', $data);				}					public function add() {			$this->password->getUrlAccess('/basic/propinsi', 'tambah');									$data		   	= array();			$data['title']	= 'Tambah Propinsi';			$this->load->viewPage('basic/list_propinsi_add', $data);		}							public function addAct() {			$this->password->getUrlAccess('/basic/propinsi', 'tambah');						$id_dd_users = $this->session->userdata('id_dd_users');						try {				$this->db->beginTrans();								$nama 		= $this->getVar('nama', TRUE);				$keterangan	= $this->getVar('keterangan', FALSE);								$insert					= array();				$insert['id_dd_users']	= $id_dd_users;				$insert['nama'] 		= $nama;				$insert['keterangan']	= $keterangan;				$this->db->insert('trans.propinsi', $insert);														$this->db->endTrans();			} catch (Exception $e) {				$this->db->endTrans(false);				echo "Tidak dapat menambah data propinsi\n\nPenjelasan Teknis:\n{$e->getMessage()}";			}		}			public function edit($id_propinsi, $page, $filter, $keyword = '') {			$this->password->getUrlAccess('/basic/propinsi', 'edit');						$sql =	"					SELECT					*					FROM					trans.propinsi					WHERE					id_propinsi = ?					";			$prop = $this->db->getRow($sql, array($id_propinsi));									$data		   		= array();			$data['title'] 		= 'Edit Propinsi';			$data['prop'] 		= $prop;			$data['page']		= $page;			$data['filter']		= $filter;			$data['keyword']	= $keyword;									$this->load->viewPage('basic/list_propinsi_edit', $data);		}						public function editAct() {			$this->password->getUrlAccess('/basic/propinsi', 'edit');						$id_dd_users = $this->session->userdata('id_dd_users');						try {				$this->db->beginTrans();				$id_propinsi 	= $this->getVar('id_propinsi', TRUE);				$nama			= $this->getVar('nama', TRUE);				$keterangan		= $this->getVar('keterangan', FALSE);				$page		 	= $this->getVar('page', TRUE);				$filter		 	= $this->getVar('filter', TRUE);				$keyword	 	= $this->getVar('keyword', TRUE);																$update					= array();				$update['id_dd_users']	= $id_dd_users;				$update['nama'] 		= $nama;				$update['keterangan']	= $keterangan;				$this->db->update('trans.propinsi', $update, 'id_propinsi = ?', array($id_propinsi));				$this->db->endTrans();								$this->session->set_flashdata('page', $page);				$this->session->set_flashdata('filter', $filter);				$this->session->set_flashdata('keyword', $keyword);															} catch (Exception $e) {				$this->db->endTrans(false);				echo "Tidak dapat memperbaharui data propinsi\n\nPenjelasan Teknis:\n{$e->getMessage()}";			}		}						public function del() {			$this->password->getUrlAccess('/basic/propinsi', 'hapus');						try {				$this->db->beginTrans();								$arr_id_propinsi = $this->getVar('id_list', TRUE);								$where_delete = str_repeat('?,', count($arr_id_propinsi));				$where_delete = 'id_propinsi IN (' . substr($where_delete, 0, -1) . ')';								$this->db->delete('trans.propinsi', $where_delete, $arr_id_propinsi);								$this->db->endTrans();			} catch (Exception $e) {				$this->db->endTrans(false);				$this->session->set_flashdata('s4b_error', "Tidak dapat menghapus data propinsi\n\nPenjelasan Teknis:\n{$e->getMessage()}");			}						redirect('/basic/propinsi');		}						public function report($filter = 1, $keyword = '') {			$this->password->getUrlAccess('/basic/propinsi', 'cetak');						/**************************** BEGIN HEAD ****************************/			$mainCols = array();			$arrCol = array();			$arrCol['title'] = 'NO.';			$arrCol['width'] = 10;			$arrCol['align'] = 'C';			$arrCol['calign'] = 'R';			$arrCol['span'] = 2;			$arrCol['sub'] = null;			array_push($mainCols, $arrCol);			$arrCol = array();			$arrCol['title'] = 'PROPINSI';			$arrCol['width'] = 100;			$arrCol['align'] = 'C';			$arrCol['calign'] = 'L';			$arrCol['span'] = 2;			$arrCol['sub'] = null;			array_push($mainCols, $arrCol);			$arrCol = array();			$arrCol['title'] = 'KETERANGAN';			$arrCol['width'] = 150;			$arrCol['align'] = 'C';			$arrCol['calign'] = 'L';			$arrCol['span'] = 2;			$arrCol['sub'] = null;			array_push($mainCols, $arrCol);						/**************************** END HEAD ****************************/						$params = array();			$params['arrHead'] = $mainCols;			$params['orientation'] = 'P';			$params['format'] = 'A4';			$this->load->library('Report', $params);			$this->load->helper('date');			$this->report->SetLogo($this->getImgFolder() . '/logo.jpg');			$this->report->SetLogoWidth(25);			$this->report->SetReportMainTitle('LAPORAN PROPINSI');			$this->report->SetReportTitle('TANGGAL CETAK', strtoupper(getCurrentDate(false)));			$this->report->Open();			$this->report->AddPage();			/**************************** BEGIN CONTENT ****************************/			// Default where...			$sql_plus = '1=1';			$params   = array();						// Filter checking...			if (!empty($keyword)) {				$keyword = strtolower($keyword);				switch ($filter) {					case 1 :						$sql_plus = 'lower(nama) LIKE ?';						$params[] = "%{$keyword}%";						break;					default :						$sql_plus = '1=1';				}			}											$sql =	"					SELECT					*					FROM					trans.propinsi					WHERE					{$sql_plus}					ORDER BY					nama					";						// Retrieve data from database...			$rows =& $this->db->getRows($sql, $params);			$i = 1;			foreach ($rows as $row) {				$arrData = array();				$arrData[] = $i++ . '.';				$arrData[] = $row['nama'];								$arrData[] = $row['keterangan'];				$this->report->InsertRow($arrData);			}			/**************************** END CONTENT ****************************/			$this->report->ShowPDF($this->session->userdata('session_id') . '_' . time(), true);		}												}/* End of file propinsi.php *//* Location: ./system/application/controllers/basic/propinsi.php */